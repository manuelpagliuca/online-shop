// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ubique.DataAccess.Data;

#nullable disable

namespace Ubique.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231023095354_SeedsDb")]
    partial class SeedsDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ubique.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Rubinetteria Lavabo"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Rubinetteria Bidet"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Rubinetteria Cascata"
                        },
                        new
                        {
                            Id = 10,
                            DisplayOrder = 4,
                            Name = "Serramenti Casa"
                        });
                });

            modelBuilder.Entity("Ubique.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Paini",
                            Description = "Permette di lavarsi le mani.",
                            ImageUrl = "/images/product/b7266cec-65ea-47ae-8011-361559e03bbb.jpg",
                            ListPrice = 100.0,
                            Name = "Turbo Compare v1",
                            Price = 240.0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Paini",
                            Description = "Permette di lavarsi le mani.",
                            ImageUrl = "/images/product/cbb0ed0f-6d37-4480-baaa-9ad4c6a7724f.jpg",
                            ListPrice = 140.0,
                            Name = "Turbo Compare v2",
                            Price = 340.0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 3,
                            Brand = "NOBILI",
                            Description = "Permette di sporcarsi le mani.",
                            ImageUrl = "/images/product/d12ad88d-0a26-4610-a6ed-c603728518fe.png",
                            ListPrice = 120.0,
                            Name = "Jars 2",
                            Price = 440.0,
                            SubCategoryId = 3
                        });
                });

            modelBuilder.Entity("Ubique.Models.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Lavabo Generico"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Monoleva"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Due maniglie"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "Bidet Generico"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Name = "Cascata Generico"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Name = "Termostatico"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 10,
                            Name = "Serramenti Generico"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 10,
                            Name = "Infissi"
                        });
                });

            modelBuilder.Entity("Ubique.Models.Product", b =>
                {
                    b.HasOne("Ubique.Models.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Ubique.Models.SubCategory", b =>
                {
                    b.HasOne("Ubique.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
